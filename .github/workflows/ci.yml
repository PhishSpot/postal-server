---
name: CI
on: [push]

jobs:
  build:
    name: CI Image Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository owner
        id: repo
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/${{ steps.repo.outputs.owner }}/postal-server:ci-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: ci
          platforms: linux/amd64

  publish-image:
    name: Publish Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository owner
        id: repo
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.owner }}/postal-server
          tags: |
            # Branch-specific tags
            type=ref,event=branch
            # Main branch gets both main and latest tags
            type=raw,value=main,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            # SHA for unique identification
            type=sha,prefix={{branch}}-
      
      - name: Build and push phishspot image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: full
          platforms: linux/amd64
          build-args: |
            VERSION=${{ github.ref_name }}
            BRANCH=${{ github.ref_name }}
            COMMIT_SHA=${{ github.sha }}